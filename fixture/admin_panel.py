from selenium.webdriver.common.by import By


class AdminHelper:

    def __init__(self, app):
        self.app = app

    def litercart_link(self):
        browser = self.app.browser
        browser.find_element(By.XPATH, "//*[contains(text(),'Appearence')]").click()
        self.assert_tag_h1()
        browser.find_element(By.XPATH, "//*[contains(text(),'Template')]/self::span").click()
        self.assert_tag_h1()
        browser.find_element(By.XPATH, "//*[contains(text(),'Logotype')]/self::span").click()
        self.assert_tag_h1()
        browser.find_element(By.XPATH, "//li[@id='app-']/a/span[text()='Catalog']").click()
        self.assert_tag_h1()
        browser.find_element(By.XPATH, "//li[@id='doc-catalog']/a/span[text()='Catalog']").click()
        self.assert_tag_h1()
        browser.find_element(By.XPATH, "//span[text()='Product Groups']").click()
        self.assert_tag_h1()
        browser.find_element(By.XPATH, "//span[text()='Option Groups']").click()
        self.assert_tag_h1()
        browser.find_element(By.XPATH, "//span[text()='Manufacturers']").click()
        self.assert_tag_h1()
        browser.find_element(By.XPATH, "//span[text()='Suppliers']").click()
        self.assert_tag_h1()
        browser.find_element(By.XPATH, "//span[text()='Delivery Statuses']").click()
        self.assert_tag_h1()
        browser.find_element(By.XPATH, "//span[text()='Sold Out Statuses']").click()
        self.assert_tag_h1()
        browser.find_element(By.XPATH, "//span[text()='Countries']").click()
        self.assert_tag_h1()
        browser.find_element(By.XPATH, "//span[text()='Currencies']").click()
        self.assert_tag_h1()
        browser.find_element(By.XPATH, "//li[@id='app-']/a/span[text()='Customers']").click()
        self.assert_tag_h1()
        browser.find_element(By.XPATH, "//li[@id='doc-customers']/a/span[text()='Customers']").click()
        self.assert_tag_h1()
        browser.find_element(By.XPATH, "//span[text()='CSV Import/Export']").click()
        self.assert_tag_h1()
        browser.find_element(By.XPATH, "//span[text()='Newsletter']").click()
        self.assert_tag_h1()
        browser.find_element(By.XPATH, "//span[text()='Geo Zones']").click()
        self.assert_tag_h1()
        browser.find_element(By.XPATH, "//li[@id='app-']/a/span[text()='Languages']").click()
        self.assert_tag_h1()
        browser.find_element(By.XPATH, "//li[@id='doc-languages']/a/span[text()='Languages']").click()
        self.assert_tag_h1()
        browser.find_element(By.XPATH, "//span[text()='Modules']").click()
        self.assert_tag_h1()
        browser.find_element(By.XPATH, "//span[text()='Background Jobs']").click()
        self.assert_tag_h1()
        browser.find_element(By.XPATH, "//span[text()='Customer']").click()
        self.assert_tag_h1()
        browser.find_element(By.XPATH, "//span[text()='Shipping']").click()
        self.assert_tag_h1()
        browser.find_element(By.XPATH, "//span[text()='Payment']").click()
        self.assert_tag_h1()
        browser.find_element(By.XPATH, "//span[text()='Order Total']").click()
        self.assert_tag_h1()
        browser.find_element(By.XPATH, "//span[text()='Order Success']").click()
        self.assert_tag_h1()
        browser.find_element(By.XPATH, "//span[text()='Order Action']").click()
        self.assert_tag_h1()
        browser.find_element(By.XPATH, "//li[@id='app-']/a/span[text()='Orders']").click()
        self.assert_tag_h1()
        browser.find_element(By.XPATH, "//li[@id='doc-orders']/a/span[text()='Orders']").click()
        self.assert_tag_h1()
        browser.find_element(By.XPATH, "//span[text()='Order Statuses']").click()
        self.assert_tag_h1()
        browser.find_element(By.XPATH, "//span[text()='Pages']").click()
        self.assert_tag_h1()
        browser.find_element(By.XPATH, "//span[text()='Reports']").click()
        self.assert_tag_h1()
        browser.find_element(By.XPATH, "//span[text()='Monthly Sales']").click()
        self.assert_tag_h1()
        browser.find_element(By.XPATH, "//span[text()='Most Sold Products']").click()
        self.assert_tag_h1()
        browser.find_element(By.XPATH, "//span[text()='Most Shopping Customers']").click()
        self.assert_tag_h1()
        browser.find_element(By.XPATH, "//span[text()='Settings']").click()
        self.assert_tag_h1()
        browser.find_element(By.XPATH, "//span[text()='Store Info']").click()
        self.assert_tag_h1()
        browser.find_element(By.XPATH, "//span[text()='Defaults']").click()
        self.assert_tag_h1()
        browser.find_element(By.XPATH, "//span[text()='General']").click()
        self.assert_tag_h1()
        browser.find_element(By.XPATH, "//span[text()='Listings']").click()
        self.assert_tag_h1()
        browser.find_element(By.XPATH, "//span[text()='Images']").click()
        self.assert_tag_h1()
        browser.find_element(By.XPATH, "//span[text()='Checkout']").click()
        self.assert_tag_h1()
        browser.find_element(By.XPATH, "//span[text()='Advanced']").click()
        self.assert_tag_h1()
        browser.find_element(By.XPATH, "//span[text()='Security']").click()
        self.assert_tag_h1()
        browser.find_element(By.XPATH, "//span[text()='Slides']").click()
        self.assert_tag_h1()
        browser.find_element(By.XPATH, "//span[text()='Tax']").click()
        self.assert_tag_h1()
        browser.find_element(By.XPATH, "//span[text()='Tax Classes']").click()
        self.assert_tag_h1()
        browser.find_element(By.XPATH, "//span[text()='Tax Rates']").click()
        self.assert_tag_h1()
        browser.find_element(By.XPATH, "//span[text()='Translations']").click()
        self.assert_tag_h1()
        browser.find_element(By.XPATH, "//span[text()='Search Translations']").click()
        self.assert_tag_h1()
        browser.find_element(By.XPATH, "//span[text()='Scan Files']").click()
        self.assert_tag_h1()
        browser.find_element(By.XPATH, "//span[text()='CSV Import/Export']").click()
        self.assert_tag_h1()
        browser.find_element(By.XPATH, "//span[text()='Users']").click()
        self.assert_tag_h1()
        browser.find_element(By.XPATH, "//li[@id='app-']/a/span[text()='vQmods']").click()
        self.assert_tag_h1()
        browser.find_element(By.XPATH, "//li[@id='doc-vqmods']/a/span[text()='vQmods']").click()
        self.assert_tag_h1()

    def assert_tag_h1(self):
        browser = self.app.browser
        assert browser.find_element(By.TAG_NAME, "h1") is not None, "Элемент с тегом h1 отсутствует!!!"


